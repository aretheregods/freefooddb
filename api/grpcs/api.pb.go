// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	FFDBRequest
	FFDBResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FFDBRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *FFDBRequest) Reset()                    { *m = FFDBRequest{} }
func (m *FFDBRequest) String() string            { return proto.CompactTextString(m) }
func (*FFDBRequest) ProtoMessage()               {}
func (*FFDBRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FFDBRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FFDBResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *FFDBResponse) Reset()                    { *m = FFDBResponse{} }
func (m *FFDBResponse) String() string            { return proto.CompactTextString(m) }
func (*FFDBResponse) ProtoMessage()               {}
func (*FFDBResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FFDBResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*FFDBRequest)(nil), "api.FFDBRequest")
	proto.RegisterType((*FFDBResponse)(nil), "api.FFDBResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FFDBAPI service

type FFDBAPIClient interface {
	SayFFDB(ctx context.Context, in *FFDBRequest, opts ...grpc.CallOption) (*FFDBResponse, error)
}

type fFDBAPIClient struct {
	cc *grpc.ClientConn
}

func NewFFDBAPIClient(cc *grpc.ClientConn) FFDBAPIClient {
	return &fFDBAPIClient{cc}
}

func (c *fFDBAPIClient) SayFFDB(ctx context.Context, in *FFDBRequest, opts ...grpc.CallOption) (*FFDBResponse, error) {
	out := new(FFDBResponse)
	err := grpc.Invoke(ctx, "/api.FFDBAPI/SayFFDB", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FFDBAPI service

type FFDBAPIServer interface {
	SayFFDB(context.Context, *FFDBRequest) (*FFDBResponse, error)
}

func RegisterFFDBAPIServer(s *grpc.Server, srv FFDBAPIServer) {
	s.RegisterService(&_FFDBAPI_serviceDesc, srv)
}

func _FFDBAPI_SayFFDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FFDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FFDBAPIServer).SayFFDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FFDBAPI/SayFFDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FFDBAPIServer).SayFFDB(ctx, req.(*FFDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FFDBAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.FFDBAPI",
	HandlerType: (*FFDBAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayFFDB",
			Handler:    _FFDBAPI_SayFFDB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52, 0xe4, 0xe2, 0x76, 0x73,
	0x73, 0x71, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x34, 0xb8, 0x78, 0x20, 0x4a,
	0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3,
	0x61, 0xca, 0x60, 0x5c, 0x23, 0x6b, 0x2e, 0x76, 0x90, 0x4a, 0xc7, 0x00, 0x4f, 0x21, 0x03, 0x2e,
	0xf6, 0xe0, 0xc4, 0x4a, 0x10, 0x4f, 0x48, 0x40, 0x0f, 0x64, 0x27, 0x92, 0x2d, 0x52, 0x82, 0x48,
	0x22, 0x10, 0x43, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0xae, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x2a, 0x62, 0x73, 0x82, 0xa2, 0x00, 0x00, 0x00,
}
